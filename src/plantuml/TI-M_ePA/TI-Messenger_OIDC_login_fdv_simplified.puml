@startuml "TI-Messenger_OIDC_Login_simplified"
skinparam sequenceMessageAlign direction
skinparam WrapWidth 300
skinparam minClassWidth 150
skinparam BoxPadding 1
skinparam ParticipantPadding 50
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width
skinparam maxMessageSize 400

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
}

autonumber

actor us as "Akteur in der\nRolle Versicherter"
box <size:19>Endgerät</size> #WhiteSmoke
  participant app as "TI-M Client\n(Browser)"
end box
box <size:19>TI-Messenger Service</size> #WhiteSmoke
  participant pr as "Messenger-Proxy"
  participant hs as "Matrix\nHomeserver\n(Relying party für IDP)"
end box
participant mc as "Webserver"
participant idp as "Sektoraler\nIDP"

|||

us -> app: starte App

activate app
  app -> mc: Lade Matrix-Web-Client
  activate mc
  mc --> app --: Webanwendung
  group <size:16>OIDC Login</size>
    app -> hs ++: GET ""{homeserver_client_api_url}""/login
    hs --> app --: 200 OK (:Login Types)
    note right
    enthalten: ID des sektoralen IDP: ""{sidp}""
    end note
    |||
    opt #LightYellow <size:16>Auswahl durch Akteur: Registrierungs- statt Login-Funktion</size>
    app -> hs ++: POST ""{homeserver_client_api_url}""/register (initial_device_display_name, refresh_token)
    hs --> app --: 401 Unauthorized
    note right
    Homeserver benötigt zusätzliche Authentisierungsinformationen
    end note
    |||
    end
    |||
    app -> hs++: GET ""{homeserver_client_api_url}""/login/sso/redirect/""{sidp}""
    |||
    group #Linen <size:16>Verhaltensänderung, da der sektorale IDP OIDC PAR erfordert</size>
      hs --> pr --++: 302 Redirect (:location, :response_type, :client_id, :redirect_uri, :scope, :state, :code_challenge)
      |||
      pr -> idp ++: POST ""{sektoraler_idp_url}""/par (response_type, redirect_uri, code_challenge, scope)

      idp --> pr --: 200 OK (:request_uri)
      |||
      pr --> app --: 302 Redirect ""{sektoraler_idp_url}""/login/oauth/authorize (request_uri)
      |||
    end
    |||
    group #LightBlue <size:16>IDP Authentisierung mit nutzerspezifischer Authentifizierung</size>
      app -> idp ++: GET ""{sektoraler_idp_url}""/login/oauth/authorize (request_uri)
      note left
      Nutzung von Identifikationsmerkmalen,
      die vom IDP vorgegeben sind
      end note
      |||
      group #DarkGray <size:16>vom IDP vorgegebenes Auth-Verfahren</size>
        idp --> app: Challenge
        app -> us: Consent Page
        us --> app: Approval
        app -> idp: Response
      |||
      end
      |||
      idp --> app --: 302 Redirect ""{redirect_uri}"" (:auth_code, :state)
      |||
    end
    |||
    app -> hs ++: GET ""{redirect_uri}"" (auth_code, state)
    |||
    hs -> idp ++: POST ""{sektoraler_idp_url}""/token-endpoint (auth_code, code_verifier)
    idp --> hs --: 200 OK (:id_token)
    opt #LightYellow <size:16>kein passender Benutzer-Account zum id_token vorhanden</size>
    hs -> hs: /register  (initial_device_display_name, refresh_token, id_token)
    note left
    Benutzer-Account anlegen
    end note
    |||
    end
    |||
    hs --> app --: 200 OK (:loginToken)
    note right
    HTML Consent Page, Zugriff
    TIM-Web-App auf Matrix Account
    end note
    |||
    app -> mc ++: GET ""{client_url}"" (loginToken)
    mc --> app--: 200 OK
    note right
    personalisierte HTML-
    Seite für den Client
    end note
    |||
    app -> hs ++: POST ""{homeserver_client_api_url}""/login (loginToken, initial_device_display_name)
    hs --> app --: 200 OK (:user_id, :access_token, :home_server, :device_id, :well_known)
    |||
  end
  app --> us: Login erfolgreich
@enduml
