@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width
skinparam maxMessageSize 300

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
}

autonumber
    
    actor v as "Versicherter"
    participant fdv [
      Frontend des Versicherten
      ----
      Inhaber eines AppTokens
    ]
    participant pa as "Push-Anbieter"
    participant pg as "Push-Gateway"
    participant fd as "Fachdienst"

activate fd
fd->pg: Benachrichtigung \nfür anbieterspezifisches AppToken(EventID)
activate pg
pg->pa: Benachrichtigung \nfür anbieterspezifisches AppToken(EventID)
activate pa
pa-->pg: Response
pg-->fd: Response
deactivate pg
pa->pa: ermittle Empfänger(anbieterspezifisches AppToken):SenderID, AppID
pa->fdv: Benachrichtigung an Empfänger(EventID, SenderID, AppID)
activate fdv
deactivate pa
fdv->fd: Abfrage der Daten zu Event(EventID, anbieterspezifisches AppToken)
fd-->fdv: :Verschlüsselte Benachrichtigungsinhalte
deactivate fd
fdv->fdv:Entschlüssele \n(Verschlüsselte Benachrichtigungsinhalte)
fdv->fdv:erzeuge Anwenderbenachrichtigung mit\n den entschlüsselten Inhalten
fdv->v:Zeige Benachrichtigung

@enduml
