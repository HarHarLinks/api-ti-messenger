/' 
# TI-Messenger 1.1
# TI-Messenger-Dienst
# UC - 10058
# Sequence Diagram
# Name: Akteur im Verzeichnisdienst hinzufügen
'/

@startuml
skinparam sequenceMessageAlign direction
skinparam minClassWidth 200
skinparam BoxPadding 1
skinparam sequenceReferenceHeaderBackgroundColor palegreen
scale max 2048 width

skinparam sequence {
ArrowColor black
ArrowFontSize 17
ActorBorderColor black
LifeLineBorderColor black
LifeLineBackgroundColor Gainsboro

ParticipantBorderColor Motivation
ParticipantBackgroundColor Motivation
ParticipantFontName Impact
ParticipantFontSize 20
ParticipantFontColor black
ParticipantBorderColor Black
ParticipantBackgroundColor MOTIVATION

ActorBackgroundColor Gainsboro
ActorFontColor black
ActorFontSize 20
ActorFontName Aapex
}

autonumber

actor U as "Akteur in der Rolle\nUser-HBA"
box <size:18>Endgerät</size> #WhiteSmoke
  participant C as "TI-Messenger-Client"
  participant A as "Authenticator \ndes IDP-Dienst"
end box
participant konnektor as "Konnektor"
participant I as "IDP-Dienst" 
box <size:18>VZD-FHIR-Directory</size> #WhiteSmoke
  participant FP as "FHIR-Proxy"
  participant Auth as "Auth-Service"
  participant VZD as "FHIR-Directory"
end box

|||
note over U, I: \n<size:17>Der Akteur ist bei einem Messenger Service angemeldet (siehe AF_10057)</size>\n
|||

U->C: FHIR Ressourcen im \nVZD-FHIR-Directory \nhinzufügen (MXID)
  Activate C
C->C: Prüfung, ob gültiges \nowner-accesstoken \nvorliegt

|||
alt#LightGrey #AliceBlue <size:16>kein gültigess owner-accesstoken</size>
|||

  C->U: Liste verfügbarer IDPs
  U->C: ausgewählter IDP

  C->Auth: GET /owner-authenticate
    Activate Auth
  Auth->Auth: Erzeuge PKCE Code \nfür verifier und challenge
  Auth-->C: Redirct to IDP Authorization Endpoint (PKCE Code)
    Deactivate Auth

  C->I: GET /authorize
    Activate I
  I-->C: Authentication challenge
  A -> konnektor++: ExternalAuthenticate

  Activate A
  konnektor --> A: ExternalAuthenticateResponse
  deactivate konnektor
  
  A->I: Authentication \nchallenge response
    Deactivate A
  I-->C: Authorization Response with Authorization Code
    Deactivate I
       
  |||          
  C->Auth: GET /signin-gematik-idp-dienst with Authorization code (PKCE Code)
    Activate Auth
  |||
  Auth-->I: POST /tokenEndpoint\n(authorization code)
    Activate I
  I->Auth: id_token
    Deactivate I
  Auth->Auth: prüfe id_token
  |||
  Auth->Auth: erzeuge \nowner-accesstoken
  Auth-->C: owner-accesstoken
    Deactivate Auth
  |||
end
      
|||

group <size:16>VZD-FHIR-Directory Eintrag</size>
  |||
  group <size:16>FHIR-Ressourcen lesen</size>
  |||
  C->FP: POST /owner/PractitionerRole/?... \nFinde Datensatz für eigene TelematikID \nAuthorization Bearer owner-accesstoken
    Activate FP
  FP->FP: prüfe \nowner-accesstoken
  FP->VZD: HTTPS Forward
    Activate VZD
  VZD-->FP: result body json
    Deactivate VZD
  FP-->C: result body json
    Deactivate FP
  |||
  end
    
  |||
  group <size:16>FHIR-Ressourcen schreiben</size>
  |||
  C->FP: FHIR-Operationen um eigenen Datensatz zu verwalten \nAuthorization Bearer owner-accesstoken \n(Optional: setze Flag für Sichtbarkeit des Endpoints)
    Activate FP
  FP->FP: prüfe \nowner-accesstoken
  FP->VZD: HTTPS Forward
    Activate VZD
  VZD-->FP: result body json
    Deactivate VZD
  FP-->C: result body json
    Deactivate FP
     
  |||
  end

  C-->U: Status    
    Deactivate C
  |||
end
|||

  Deactivate C
@enduml
